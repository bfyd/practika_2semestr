<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>