<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>